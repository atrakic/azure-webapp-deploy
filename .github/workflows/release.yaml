# Deployment instructions:
#
# 1) Create new Azure service principal (SP):
#    `az ad sp create-for-rbac --role="Contributor" --scopes="/subscriptions/$SUBSCRIPTION_ID"
# 2) In your github project create a new secret named AZURE_CREDENTIALS and paste
#    the json object output from previous command
# 3) Optional: name your app. See AZURE_WEBAPP_NAME
# 4) Comment line 84 to allow deployment job to run
# 5) Commit and push

name: Azure Webapps Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'src/**'
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  packages: write

env:
  AZURE_WEBAPP_NAME: '${{ github.repository_owner }}-azure-app' # The name of your Azure Web App. Should be unique.
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}
  DEPLOYMENT_SCRIPT: https://raw.githubusercontent.com/${{ github.repository }}/main/infra/setup.sh

jobs:
  # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
  # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: ./src
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: List image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker image ls ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    permissions:
      contents: none
      packages: read

    runs-on: ubuntu-latest
    needs: build

    ### Comment out when secret.AZURE_CREDENTIALS is created
    if: false
    #if: github.event_name != 'pull_request'

    environment:
      name: 'Development'
      url: ${{ steps.deploy.outputs.webapp-url }}

    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Use Azure CLI script to provision infrastructure for Web App Linux container'
        run: |
          az account show
          curl -sSL ${{ DEPLOYMENT_SCRIPT }} | \
          LOCATION_NAME=westeurope \
          SKU_NAME=S1 \
          WEB_APP_NAME=app-$IMAGE_NAME \
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
          bash -s

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy container to Azure Web App
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'

# Example trigger pipeline usage:
# TAG="v0.0.1"
# git tag "$TAG" -m "Release version: $TAG"
# git push origin --tags
